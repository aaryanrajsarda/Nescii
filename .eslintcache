[{"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\index.js":"1","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\App.js":"2","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\StateProvider.js":"3","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reportWebVitals.js":"4","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\user.js":"5","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Home.js":"6","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Header.js":"7","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\configureStore.js":"8","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Resources.js":"9","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Society.js":"10","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Login.js":"11","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionTypes.js":"12","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Notices.js":"13","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Feed.js":"14","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\notices.js":"15","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\posts.js":"16","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyDefault.js":"17","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\socPosts.js":"18","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyChat.js":"19","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\firebase.js":"20","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Sidebar.js":"21","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Loading.js":"22","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionCreators.js":"23","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\MessageSender.js":"24","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Post.js":"25","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebar.js":"26","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyMessageSender.js":"27","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyPost.js":"28","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Widgets.js":"29","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\WidgetAbout.js":"30","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Events.js":"31","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Event.js":"32","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebarOption.js":"33","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\googleCalendar.js":"34"},{"size":695,"mtime":1613388083448,"results":"35","hashOfConfig":"36"},{"size":1181,"mtime":1613928527624,"results":"37","hashOfConfig":"36"},{"size":432,"mtime":1612356946110,"results":"38","hashOfConfig":"36"},{"size":362,"mtime":1609075119802,"results":"39","hashOfConfig":"36"},{"size":240,"mtime":1613388083455,"results":"40","hashOfConfig":"36"},{"size":623,"mtime":1614049467282,"results":"41","hashOfConfig":"36"},{"size":6926,"mtime":1614005397305,"results":"42","hashOfConfig":"36"},{"size":451,"mtime":1614005932105,"results":"43","hashOfConfig":"36"},{"size":346,"mtime":1613997215418,"results":"44","hashOfConfig":"36"},{"size":461,"mtime":1612356946080,"results":"45","hashOfConfig":"36"},{"size":10085,"mtime":1614061751575,"results":"46","hashOfConfig":"36"},{"size":460,"mtime":1613757396831,"results":"47","hashOfConfig":"36"},{"size":3112,"mtime":1614322642532,"results":"48","hashOfConfig":"36"},{"size":1707,"mtime":1613846964059,"results":"49","hashOfConfig":"36"},{"size":691,"mtime":1612012903797,"results":"50","hashOfConfig":"36"},{"size":675,"mtime":1613703848587,"results":"51","hashOfConfig":"36"},{"size":12420,"mtime":1627147781072,"results":"52","hashOfConfig":"36"},{"size":897,"mtime":1613757396834,"results":"53","hashOfConfig":"36"},{"size":5657,"mtime":1614323831734,"results":"54","hashOfConfig":"36"},{"size":845,"mtime":1612356946118,"results":"55","hashOfConfig":"36"},{"size":13194,"mtime":1614665246193,"results":"56","hashOfConfig":"36"},{"size":219,"mtime":1612012903757,"results":"57","hashOfConfig":"36"},{"size":3385,"mtime":1613997215421,"results":"58","hashOfConfig":"36"},{"size":14277,"mtime":1614322525005,"results":"59","hashOfConfig":"36"},{"size":8606,"mtime":1614335890834,"results":"60","hashOfConfig":"36"},{"size":10895,"mtime":1614005397322,"results":"61","hashOfConfig":"36"},{"size":24078,"mtime":1614336160884,"results":"62","hashOfConfig":"36"},{"size":10088,"mtime":1614336257612,"results":"63","hashOfConfig":"36"},{"size":440,"mtime":1612356946116,"results":"64","hashOfConfig":"36"},{"size":773,"mtime":1614323619930,"results":"65","hashOfConfig":"36"},{"size":1691,"mtime":1614323319802,"results":"66","hashOfConfig":"36"},{"size":3812,"mtime":1617199152714,"results":"67","hashOfConfig":"36"},{"size":959,"mtime":1612356946107,"results":"68","hashOfConfig":"36"},{"size":685,"mtime":1613388083446,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"19nyqpk",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\index.js",[],["146","147"],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\App.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\StateProvider.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\user.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Home.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Header.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\configureStore.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Resources.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Society.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Login.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { SET_USER } from \"./redux/ActionTypes\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const [state, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n  const [lostOpen, setLostOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [lostEmail, setLostEmail] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        //user has logged in..\r\n        // console.log(authUser.uid);\r\n        setUser(authUser); // helps in persistence\r\n      } else {\r\n        //user has logged out..\r\n        setUser(null);\r\n      }\r\n      dispatch({\r\n        type: SET_USER,\r\n        user: user,\r\n      });\r\n    });\r\n  }, [dispatch, user, username]);\r\n\r\n  const signInWithGoogle = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        dispatch({\r\n          type: SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (email.includes(\"@nsut.ac.in\") === false) {\r\n      alert(\"Not a valid NSUT Id! Please SignUp using a valid id\");\r\n    } else {\r\n      auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((authUser) => {\r\n          // console.log(authUser.user);\r\n          authUser.user\r\n            .sendEmailVerification()\r\n            .then(function () {\r\n              // Email sent.\r\n              alert(\"Verification email sent to your email id!\");\r\n            })\r\n            .catch(function (error) {\r\n              // An error happened.\r\n              alert(\"error \" + error.message);\r\n            });\r\n          db.collection(\"users\").doc(authUser.user.uid).set({\r\n            branch: \"\",\r\n            section: \"\",\r\n            year: \"\",\r\n          });\r\n          return authUser.user.updateProfile({\r\n            displayName: username,\r\n          });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const signIn = (event) => {\r\n    event.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        // console.log(result);\r\n        dispatch({\r\n          type: SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const lostPassword = (event) => {\r\n    event.preventDefault();\r\n    if (lostEmail.includes(\"@nsut.ac.in\") === true) {\r\n      var auth = firebase.auth();\r\n      auth\r\n        .sendPasswordResetEmail(lostEmail)\r\n        .then(function () {\r\n          // Email sent.\r\n          alert(\"Password Reset Email sent!\");\r\n        })\r\n        .catch(function (error) {\r\n          // An error happened.\r\n          alert(\"Error: \" + error.message);\r\n        });\r\n    } else {\r\n      alert(\"Not a valid NSUT email id\");\r\n    }\r\n    setLostEmail(\"\");\r\n    setLostOpen(false);\r\n  };\r\n\r\n  // https://drive.google.com/file/d/1lol0E4WlbCtPf4ZsczNcL8COq4srRSdo/view?usp=sharing\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login row \">\r\n        <div className=\"login__container offset-2 col-8 col-md-4 offset-md-4\">\r\n          <img\r\n            className=\"login__photo\"\r\n            src=\"https://drive.google.com/thumbnail?id=1lol0E4WlbCtPf4ZsczNcL8COq4srRSdo\"\r\n            alt=\"\"\r\n          />\r\n          <Modal open={open} onClose={() => setOpen(false)}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <form className=\"app__signup\">\r\n                <center>\r\n                  <img\r\n                    className=\"login__photo\"\r\n                    src=\"https://drive.google.com/thumbnail?id=1lol0E4WlbCtPf4ZsczNcL8COq4srRSdo\"\r\n                    alt=\"dd\"\r\n                  />\r\n                </center>\r\n                <TextField\r\n                  style={{ width: \"90%\" }}\r\n                  placeholder=\"Name\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  margin=\"normal\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                  style={{ width: \"90%\" }}\r\n                  placeholder=\"abc@nsut.ac.in\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  style={{ width: \"90%\" }}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  margin=\"normal\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button\r\n                  style={{ outlineWidth: \"0\", width: \"99%\" }}\r\n                  type=\"submit\"\r\n                  onClick={signUp}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Modal>\r\n\r\n          <Modal open={lostOpen} onClose={() => setLostOpen(false)}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <form className=\"app__signup\">\r\n                <center>\r\n                  <img\r\n                    className=\"login__photo\"\r\n                    src=\"https://drive.google.com/thumbnail?id=1lol0E4WlbCtPf4ZsczNcL8COq4srRSdo\"\r\n                    alt=\"dd\"\r\n                  />\r\n                </center>\r\n                <TextField\r\n                  style={{ width: \"90%\" }}\r\n                  placeholder=\"abc@nsut.ac.in\"\r\n                  type=\"text\"\r\n                  value={lostEmail}\r\n                  onChange={(e) => setLostEmail(e.target.value)}\r\n                  margin=\"normal\"\r\n                />\r\n                <Button\r\n                  style={{ outlineWidth: \"0\", width: \"99%\" }}\r\n                  type=\"submit\"\r\n                  onClick={lostPassword}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Modal>\r\n          {/* <h1>Sign in to Nescii</h1> */}\r\n          <div>\r\n            <form className=\"app__signup\">\r\n              <TextField\r\n                style={{ width: \"90%\" }}\r\n                placeholder=\"abc@nsut.ac.in\"\r\n                type=\"text\"\r\n                value={email}\r\n                required\r\n                margin=\"normal\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <br />\r\n              <TextField\r\n                style={{ width: \"90%\" }}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                value={password}\r\n                margin=\"normal\"\r\n                required\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <h6\r\n                variant=\"contained\"\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  textAlign: \"left\",\r\n                  width: \"90%\",\r\n                  color: \"#16a596\",\r\n                  fontSize: \"0.9rem\",\r\n                  padding: \"0px\",\r\n                }}\r\n                type=\"submit\"\r\n                onClick={() => setLostOpen(true)}\r\n              >\r\n                Forgot password?\r\n              </h6>\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ outlineWidth: \"0\" }}\r\n                type=\"submit\"\r\n                onClick={signIn}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n            <br />\r\n            <br />\r\n\r\n            <center>\r\n              <h4\r\n                style={{\r\n                  width: \"70%\",\r\n                  textAlign: \"center\",\r\n                  borderBottom: \"1px solid #000\",\r\n                  lineHeight: \"0.1em\",\r\n                }}\r\n              >\r\n                <span style={{ backgroundColor: \"#fff\", padding: \"0 10px\" }}>\r\n                  OR\r\n                </span>\r\n              </h4>\r\n            </center>\r\n            <br />\r\n            <br />\r\n          </div>\r\n          <Button onClick={signInWithGoogle}>\r\n            <img\r\n              className=\"google__image\"\r\n              src=\"https://www.google.com/images/hpp/gsa_super_g-64.gif\"\r\n              alt=\"\"\r\n            />\r\n            Sign In With Google\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"login__container offset-2 col-8 col-md-4 offset-md-4\">\r\n          <div className=\"app__loginContainer \" style={{ textAlign: \"left\" }}>\r\n            <Button\r\n              style={{\r\n                outlineWidth: \"0\",\r\n                width: \"99%\",\r\n                fontSize: \"1rem\",\r\n                fontWeight: \"bolder\",\r\n              }}\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              SignUp\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionTypes.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Notices.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Feed.js",["149"],"import React, { useEffect } from \"react\";\r\nimport \"./Feed.css\";\r\nimport MessageSender from \"./MessageSender\";\r\nimport Post from \"./Post\";\r\nimport { fetchPosts } from \"./redux/ActionCreators\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport { AnimatedList } from \"react-animated-list\";\r\n\r\nfunction DisplayPosts({ posts, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (\r\n      <center>\r\n        <Loading type={\"spinningBubbles\"} color={\"white\"} />\r\n      </center>\r\n    );\r\n  } else if (errMess) {\r\n    return (\r\n      <center>\r\n        <h4>{errMess}</h4>\r\n      </center>\r\n    );\r\n  } else {\r\n      return (\r\n        <AnimatedList initialAnimationDuration={2000}>\r\n          {posts?.map(({ post, id }) => {\r\n            return (\r\n              <Post\r\n                key={id}\r\n                uid={post?.uid}\r\n                username={post?.username}\r\n                postId={id}\r\n                likes={post?.likes}\r\n                message={post?.message}\r\n                profilePic={post?.profilePic}\r\n                timestamp={post?.timestamp}\r\n                images={post?.images}\r\n                video={post?.video}\r\n              />\r\n            );\r\n          })}\r\n        </AnimatedList>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nfunction Feed() {\r\n  const posts = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"feed col-12\">\r\n      <MessageSender />\r\n      <DisplayPosts\r\n        posts={posts.posts}\r\n        isLoading={posts.isLoading}\r\n        errMess={posts.errMess}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\notices.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\posts.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyDefault.js",["150"],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\socPosts.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyChat.js",["151"],"import React, { useState, useEffect } from \"react\";\r\nimport SocietyMessageSender from \"./SocietyMessageSender\";\r\nimport SocietyPost from \"./SocietyPost\";\r\nimport Widgets from \"./Widgets\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SocietySidebar from \"./SocietySidebar\";\r\nimport { Button, Drawer } from \"@material-ui/core\";\r\nimport Events from \"./Events\";\r\nimport WidgetAbout from \"./WidgetAbout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchSocPosts } from \"./redux/ActionCreators\";\r\nimport Loading from \"./Loading\";\r\nimport { AnimatedList } from \"react-animated-list\";\r\n\r\nfunction DisplaySocPosts({ socPosts, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (\r\n      <center>\r\n        <Loading type={\"spinningBubbles\"} color={\"#16A596\"} />\r\n      </center>\r\n    );\r\n  } else if (errMess) {\r\n    return (\r\n      <center>\r\n        <h4>{errMess}</h4>\r\n      </center>\r\n    );\r\n  } else {\r\n    return (\r\n      <AnimatedList initialAnimationDuration={2000}>\r\n        {socPosts?.map(({ post, id }) => {\r\n          return (\r\n            <SocietyPost\r\n              key={id}\r\n              uid={post?.uid}\r\n              username={post?.username}\r\n              postId={id}\r\n              likes={post?.likes}\r\n              message={post?.message}\r\n              profilePic={post?.profilePic}\r\n              timestamp={post?.timestamp}\r\n              images={post?.images}\r\n              video={post?.video}\r\n            />\r\n          );\r\n        })}\r\n      </AnimatedList>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SocietyChat() {\r\n  const socPosts = useSelector((state) => state.socPosts);\r\n  const dispatch = useDispatch();\r\n  const { societyId } = useParams();\r\n  const [socs, setSocs] = useState(false);\r\n  const [about, setAbout] = useState(false);\r\n  const [events, setEvents] = useState(false);\r\n\r\n  const toggleAboutDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setAbout(open);\r\n  };\r\n\r\n  const toggleEventsDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setEvents(open);\r\n  };\r\n\r\n  const toggleSocDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setSocs(open);\r\n  };\r\n\r\n  //    1. changes URL with useHistory() Hook\r\n  //    2. connects to databse using useEffect() and listens to the state changes using useState() hhok\r\n  //    3. Uses URL by useParams(roomId) to fetch room details from the database!\r\n  //    4. useHistory() and useParams() are from react-router-dom\r\n  //    5. useEffect() and useState() are fom react;\r\n\r\n  useEffect(() => {\r\n    if (societyId) {\r\n      dispatch(fetchSocPosts(societyId));\r\n    }\r\n  }, [societyId]);\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={socs}\r\n        onClick={toggleSocDrawer(false)}\r\n        onClose={toggleSocDrawer(false)}\r\n      >\r\n        <SocietySidebar />\r\n      </Drawer>\r\n      <Drawer\r\n        anchor=\"top\"\r\n        open={about}\r\n        onClick={toggleAboutDrawer(false)}\r\n        onClose={toggleAboutDrawer(false)}\r\n      >\r\n        <WidgetAbout society={socPosts.societyDetails} />\r\n      </Drawer>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={events}\r\n        onClick={toggleEventsDrawer(false)}\r\n        onClose={toggleEventsDrawer(false)}\r\n      >\r\n        <Events />\r\n      </Drawer>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4 d-block d-md-none pt-3\">\r\n            <center>\r\n              <Button\r\n                onClick={toggleSocDrawer(true)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Societies\r\n              </Button>\r\n            </center>\r\n          </div>\r\n          <div className=\"col-4 d-block d-md-none pt-3\">\r\n            <center>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={toggleAboutDrawer(true)}\r\n                color=\"primary\"\r\n              >\r\n                About\r\n              </Button>\r\n            </center>\r\n          </div>\r\n          <div className=\"col-4 d-block d-md-none pt-3\">\r\n            <center>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={toggleEventsDrawer(true)}\r\n                color=\"primary\"\r\n              >\r\n                Events\r\n              </Button>\r\n            </center>\r\n          </div>\r\n          <div className=\"col-2 d-md-block d-none p-0\">\r\n            <SocietySidebar />\r\n          </div>\r\n          <div className=\"col-12 col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <SocietyMessageSender\r\n                  title={socPosts.societyDetails?.title}\r\n                  imageURL={socPosts.societyDetails?.imageURL}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <DisplaySocPosts\r\n                  socPosts={socPosts.socPosts}\r\n                  isLoading={socPosts.isLoading}\r\n                  errMess={socPosts.errMess}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 d-none d-md-block\" style={{border:\"3px solid #00af91\" , borderRadius:\"10px\"}}>\r\n            <Widgets society={socPosts?.societyDetails} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SocietyChat;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\firebase.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Sidebar.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Loading.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionCreators.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\MessageSender.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Post.js",["152"],"import { Avatar, Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Post.css\";\r\nimport firebase from \"firebase\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { db } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  EffectFlip,\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  A11y,\r\n  Zoom,\r\n} from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/effect-flip/effect-flip.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\nimport \"swiper/components/zoom/zoom.scss\";\r\n\r\nSwiperCore.use([EffectFlip, Navigation, Pagination, Scrollbar, A11y, Zoom]);\r\n\r\nfunction Post({\r\n  postId,\r\n  uid,\r\n  profilePic,\r\n  images,\r\n  likes,\r\n  username,\r\n  timestamp,\r\n  message,\r\n  video,\r\n}) {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [{ user }] = useStateValue();\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const body2 = <></>;\r\n\r\n  const body = (\r\n    <>\r\n      {\r\n        <Swiper\r\n          effect=\"flip\"\r\n          navigation\r\n          pagination={{ clickable: true }}\r\n          scrollbar={{ draggable: true }}\r\n          className=\"col-12\"\r\n        >\r\n          {images?.map((image, el) => {\r\n            return (\r\n              <SwiperSlide>\r\n                <img\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    height: \"300px\",\r\n                    padding: \"0px 0px 0px 0px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                  src={image}\r\n                  alt=\"\"\r\n                />\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n          {video !== undefined ? (\r\n            <SwiperSlide className=\"col-12 \" style={{ paddingLeft:\"20px\" }}>\r\n              <ReactPlayer\r\n                url={video}\r\n                objectFit=\"contain\"\r\n                style={{ height: \"300px\", padding: \"0px 0px 30px 0px\" }}\r\n                controls={true}\r\n                className=\"col-12 \"\r\n              />\r\n            </SwiperSlide>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Swiper>\r\n      }\r\n    </>\r\n  );\r\n\r\n  const handlePostDelete = () => {\r\n    db.collection(\"home\")\r\n      .doc(postId)\r\n      .delete()\r\n      .then(() => {\r\n        // Document successfully deleted!\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  const condition = () => {\r\n    if (images === undefined && video === undefined) {\r\n      return body2;\r\n    } else if (\r\n      images !== undefined &&\r\n      video === undefined &&\r\n      images.length === 1\r\n    ) {\r\n      return (\r\n        <div\r\n          className=\"post__image col-12 justify-content-center\"\r\n          style={{ padding: \"0px\" }}\r\n        >\r\n          <img\r\n            style={{\r\n              objectFit: \"contain\",\r\n              height: \"300px\",\r\n              padding: \"0px 0px 0px 0px\",\r\n              width: \"100%\",\r\n            }}\r\n            src={images[0]}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      );\r\n    } else if (images === undefined && video !== undefined) {\r\n      return (\r\n        <ReactPlayer\r\n          url={video}\r\n          style={{ height: \"250px\", objectFit: \"contain\" }}\r\n          controls={true}\r\n          className=\"col-10 offset-1\"\r\n        />\r\n      );\r\n    } else {\r\n      return body;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postId) {\r\n      db.collection(\"home\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setComments(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              comment: doc.data(),\r\n            }))\r\n          );\r\n        });\r\n\r\n      for (let i = 0; i < likes?.length; i++) {\r\n        if (user?.uid === likes[i]) {\r\n          setLiked(true);\r\n        }\r\n      }\r\n      if (likes === undefined) {\r\n        likes = [];\r\n      }\r\n      db.collection(\"home\")\r\n        .doc(postId)\r\n        .update({\r\n          likes: likes,\r\n        })\r\n        .then(function () {\r\n          // Post Successfully Submitted!\r\n        })\r\n        .catch(function (error) {\r\n          // The document probably doesn't exist.\r\n          console.error(\"Error updating document: \", error);\r\n        });\r\n      // console.log(liked);\r\n    }\r\n  }, [postId, user?.uid, liked]);\r\n\r\n  const handleLikes = () => {\r\n    if (liked) {\r\n      for (var i = 0; i < likes.length; i++) {\r\n        if (likes[i] === user?.uid) {\r\n          likes.splice(i, 1);\r\n        }\r\n      }\r\n      setLiked(false);\r\n    } else {\r\n      likes.push(user?.uid);\r\n      setLiked(true);\r\n    }\r\n    // console.log(db.collection(\"home\").doc(postId))\r\n  };\r\n\r\n  const postComment = (event) => {\r\n    event.preventDefault();\r\n    if (user?.email.includes(\"@nsut.ac.in\") === false) {\r\n      alert(\"Not a NSUT student! Please sign in with NSUT id to continue.\");\r\n    } else if (user?.emailVerified === false) {\r\n      alert(\"Please verify your email id first!\");\r\n    } else {\r\n      db.collection(\"home\").doc(postId).collection(\"comments\").add({\r\n        text: comment,\r\n        username: user?.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        url: user?.photoURL,\r\n        uid: user?.uid,\r\n      });\r\n    }\r\n\r\n    setComment(\"\");\r\n  };\r\n  const handleCommentDelete = (commentId) => {\r\n    db.collection(\"home\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(commentId)\r\n      .delete()\r\n      .then(() => {\r\n        // Document successfully deleted!\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n  const checkColor = () => {\r\n    if (liked === true) return \"blue\";\r\n    else return \"gray\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__top\">\r\n        <div className=\"post__info__container\">\r\n          <Avatar src={profilePic} className=\"post__avatar\" alt=\"Profile Pic\" />\r\n          <div className=\"post__topInfo\">\r\n            <h3 style={{ margin: \"0\" }}>{username}</h3>\r\n            <p>{new Date(timestamp?.toDate()).toUTCString()}</p>\r\n          </div>\r\n        </div>\r\n        {uid === user?.uid ||\r\n        user?.email.includes(\"nescii101@gmail.com\") === true ? (\r\n          <DeleteIcon onClick={handlePostDelete} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"post__bottom\">\r\n        <p style={{ overflowWrap: \"anywhere\" }}>{message}</p>\r\n      </div>\r\n\r\n      {condition()}\r\n\r\n      <div className=\"post__options\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <ThumbUpAltIcon\r\n            onClick={handleLikes}\r\n            style={{ color: checkColor(), marginRight: \"8px\" }}\r\n          />\r\n          <p>{likes?.length}</p>\r\n        </div>\r\n        <form className=\"post__commentBox\">\r\n          <input\r\n            className=\"post__input\"\r\n            type=\"text\"\r\n            placeholder=\"Add a comment..\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n          <Button\r\n            style={{ justifyContent: \"end\" }}\r\n            className=\"post__button\"\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            onClick={postComment}\r\n          >\r\n            Post\r\n          </Button>\r\n        </form>\r\n        <div className=\"post__comments\">\r\n          {!comments\r\n            ? \"\"\r\n            : comments.map(({ comment, id }) => {\r\n                return (\r\n                  <div className=\"comment__div__container\">\r\n                    <div className=\"comment__div\">\r\n                      <Avatar src={comment.url} alt=\"\" />\r\n                      <p>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                      </p>\r\n                    </div>\r\n                    {user?.uid === comment.uid ||\r\n                    user?.email.includes(\"nescii101@gmail.com\") ? (\r\n                      <DeleteIcon onClick={() => handleCommentDelete(id)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebar.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyMessageSender.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyPost.js",["153"],"import { Avatar, Button, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./SocietyPost.css\";\r\nimport { db } from \"./firebase\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n  EffectFlip,\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  A11y,\r\n  Zoom,\r\n} from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/effect-fade/effect-fade.scss\";\r\nimport \"swiper/components/effect-flip/effect-flip.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\nimport \"swiper/components/zoom/zoom.scss\";\r\n\r\nSwiperCore.use([EffectFlip, Navigation, Pagination, Scrollbar, A11y, Zoom]);\r\n\r\nfunction SocietyPost({\r\n  postId,\r\n  profilePic,\r\n  images,\r\n  video,\r\n  username,\r\n  likes,\r\n  uid,\r\n  timestamp,\r\n  message,\r\n}) {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [{ user }] = useStateValue();\r\n  const [liked, setLiked] = useState(false);\r\n  const { societyId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (postId) {\r\n      db.collection(\"societies\")\r\n        .doc(societyId)\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setComments(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              comment: doc.data(),\r\n            }))\r\n          );\r\n        });\r\n\r\n      //if likes is undefined\r\n\r\n      for (let i = 0; i < likes?.length; i++) {\r\n        if (user?.uid === likes[i]) {\r\n          setLiked(true);\r\n        }\r\n      }\r\n\r\n      if (likes === undefined) {\r\n        likes = [];\r\n      }\r\n\r\n      db.collection(\"societies\")\r\n        .doc(societyId)\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .update({\r\n          likes: likes,\r\n        })\r\n        .then(function () {\r\n          // console.log(message + \" Likes updated Successfully!\");\r\n        })\r\n        .catch(function (error) {\r\n          // The document probably doesn't exist.\r\n          console.error(\"Error updating document: \", error);\r\n        });\r\n      // console.log(liked);\r\n    }\r\n  }, [postId, societyId, liked]);\r\n\r\n  const handleCommentDelete = (commentId) => {\r\n    db.collection(\"societies\")\r\n      .doc(societyId)\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(commentId)\r\n      .delete()\r\n      .then(() => {\r\n        // Document successfully deleted!\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  const societyPostComment = (event) => {\r\n    event.preventDefault();\r\n    if (user?.email.includes(\"@nsut.ac.in\") === false) {\r\n      alert(\"Not a NSUT student! Please sign in with NSUT id to continue.\");\r\n    } else if (user?.emailVerified === false) {\r\n      alert(\"Please verify your email id first!\");\r\n    } else {\r\n      db.collection(\"societies\")\r\n        .doc(societyId)\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .add({\r\n          text: comment,\r\n          url: user?.photoURL,\r\n          username: user?.displayName,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          uid: user?.uid,\r\n        });\r\n    }\r\n\r\n    setComment(\"\");\r\n  };\r\n  const handlePostDelete = () => {\r\n    db.collection(\"societies\")\r\n      .doc(societyId)\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .delete()\r\n      .then(() => {\r\n        // Document successfully deleted!\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  const body2 = <></>;\r\n  const body = (\r\n    <>\r\n      {\r\n        <Swiper\r\n          effect=\"flip\"\r\n          navigation\r\n          pagination={{ clickable: true }}\r\n          scrollbar={{ draggable: true }}\r\n          className=\"col-12\"\r\n        >\r\n          {images?.map((image, el) => {\r\n            return (\r\n              <SwiperSlide>\r\n                <img\r\n                  style={{\r\n                    objectFit: \"contain\",\r\n                    height: \"300px\",\r\n                    padding: \"0px 0px 0px 0px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                  src={image}\r\n                  alt=\"\"\r\n                />\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n          {video !== undefined ? (\r\n            <SwiperSlide className=\"col-12 \" style={{ paddingLeft:\"20px\" }}>\r\n              <ReactPlayer\r\n                url={video}\r\n                objectFit=\"contain\"\r\n                style={{ height: \"300px\", padding: \"0px 0px 30px 0px\" }}\r\n                controls={true}\r\n                className=\"col-12 \"\r\n              />\r\n            </SwiperSlide>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Swiper>\r\n      }\r\n    </>\r\n  );\r\n\r\n  const condition = () => {\r\n    if (images === undefined && video === undefined) {\r\n      return body2;\r\n    } else if (\r\n      images !== undefined &&\r\n      video === undefined &&\r\n      images.length === 1\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className=\"post__image col-12 justify-content-center\"\r\n            style={{ padding: \"0px\" }}\r\n          >\r\n            <img\r\n              style={{\r\n                objectFit: \"contain\",\r\n                height: \"300px\",\r\n                padding: \"0px 0px 0px 0px\",\r\n                width: \"100%\",\r\n              }}\r\n              src={images[0]}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (images === undefined && video !== undefined) {\r\n      return (\r\n        <>\r\n          <ReactPlayer\r\n            url={video}\r\n            style={{ height: \"250px\", objectFit: \"contain\" }}\r\n            controls={true}\r\n            className=\"col-10 offset-1\"\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      return body;\r\n    }\r\n  };\r\n\r\n  const handleLikes = () => {\r\n    if (liked) {\r\n      for (var i = 0; i < likes.length; i++) {\r\n        if (likes[i] === user?.uid) {\r\n          likes.splice(i, 1);\r\n        }\r\n      }\r\n      setLiked(false);\r\n    } else {\r\n      likes.push(user?.uid);\r\n      setLiked(true);\r\n    }\r\n    // console.log(db.collection(\"home\").doc(postId))\r\n  };\r\n\r\n  const checkColor = () => {\r\n    for (let i = 0; i < likes?.length; i++) {\r\n      if (user?.uid === likes[i]) {\r\n        return \"blue\";\r\n      }\r\n    }\r\n    return \"gray\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__top\">\r\n        <div className=\"post__info__container\">\r\n          <Avatar src={profilePic} className=\"post__avatar\" alt=\"Profile Pic\" />\r\n          <div className=\"post__topInfo\">\r\n            <h3 style={{ margin: \"0\" }}>{username}</h3>\r\n            <Typography paragraph>\r\n              {new Date(timestamp?.toDate()).toUTCString()}\r\n            </Typography>\r\n            {/* <p>timestamp....</p> */}\r\n          </div>\r\n        </div>\r\n        {uid === user?.uid ||\r\n        user?.email.includes(\"nescii101@gmail.com\") === true ? (\r\n          <DeleteIcon onClick={handlePostDelete} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"post__bottom\">\r\n        <Typography paragraph style={{ overflowWrap: \"anywhere\" }}>\r\n          {message}\r\n        </Typography>\r\n      </div>\r\n      {/* <div className=\"post__image\">\r\n        <img src={image} alt=\"\" />\r\n      </div> */}\r\n      {/* Carousel */}\r\n\r\n      {condition()}\r\n      {/* {images===undefined ? (body2): (body) } */}\r\n      {/* cond-1 when both are null */}\r\n      {/* {images===undefined && video===undefined ? (body2): (body) } */}\r\n\r\n      {/* cond-2 when only one image is there , video being absent */}\r\n      {/* cond-3 when only video is present */}\r\n      {/* cond-4 when two or more images are present, video absent */}\r\n      {/* cond-5 all present */}\r\n\r\n      <div className=\"post__options\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <ThumbUpAltIcon\r\n            onClick={handleLikes}\r\n            style={{ color: checkColor(), marginRight: \"8px\" }}\r\n          />\r\n          <Typography paragraph>{likes?.length}</Typography>\r\n        </div>\r\n        <form className=\"post__commentBox\">\r\n          <input\r\n            className=\"post__input\"\r\n            type=\"text\"\r\n            placeholder=\"Add a comment..\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n          <Button\r\n            style={{ justifyContent: \"end\" }}\r\n            className=\"post__button\"\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            onClick={societyPostComment}\r\n          >\r\n            Post\r\n          </Button>\r\n        </form>\r\n        <div className=\"post__comments\">\r\n          {!comments\r\n            ? \"\"\r\n            : comments.map(({ comment, id }) => {\r\n                return (\r\n                  <div className=\"comment__div__container\">\r\n                    <div className=\"comment__div\">\r\n                      <Avatar src={comment.url} alt=\"\" />\r\n                      <Typography paragraph>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                      </Typography>\r\n                    </div>\r\n                    {user?.uid === comment.uid ||\r\n                    user?.email.includes(\"nescii101@gmail.com\") ? (\r\n                      <DeleteIcon onClick={() => handleCommentDelete(id)} />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SocietyPost;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Widgets.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\WidgetAbout.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Events.js",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"./firebase\";\r\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\r\nfunction Events() {\r\n  const { societyId } = useParams();\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (societyId) {\r\n      db.collection(\"societies\")\r\n        .doc(societyId)\r\n        .collection(\"events\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setEvents(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              event: doc.data(),\r\n            }))\r\n          )\r\n        );\r\n    }\r\n  }, [societyId]);\r\n\r\n  return (\r\n    <div className=\"events\">\r\n      <center>\r\n        <h2 className=\"p-2\" style={{color:\"#00af91\"}}>Upcoming events</h2>\r\n      </center>\r\n      {events?.length===0\r\n        ? (\r\n          <>\r\n           <div style={{textAlign:\"center\"}}>\r\n             <img style={{width:\"20%\", height:\"30%\",color:\"gray\", marginBottom:\"22px\", borderRadius:\"10px\"}}src=\"https://cdn.onlinewebfonts.com/svg/img_375010.png\" alt=\"no events till now -_-\" />\r\n             {/* <EventBusyIcon /> */}\r\n           </div>\r\n          </>\r\n        )\r\n        : events.map(({ event, id }) => (\r\n            <>\r\n              <Event\r\n                id={id}\r\n                url={event.url}\r\n                title={event.title}\r\n                timeline={event.timestamp}\r\n                place={event.place}\r\n                description={event.description}\r\n              />\r\n              <br />\r\n            </>\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Event.js",["155"],"import React, { useEffect } from \"react\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"./firebase\";\r\nimport Calendar from \"./googleCalendar\";\r\n\r\nfunction Event({ id, url, title, timeline, place, description }) {\r\n  const societyId = useParams();\r\n  const handleClick = ({ url, title, timeline, place, description }) => {\r\n    var gapi = window.gapi;\r\n    gapi.load(\"client:auth2\", () => {\r\n      // loaded client\r\n      gapi.client.init({\r\n        apiKey: Calendar.api_key,\r\n        clientId: Calendar.client_id,\r\n        discoveryDocs: Calendar.discovery_docs,\r\n        scope: Calendar.scopes,\r\n      });\r\n      gapi.client.load(\"calendar\", \"v3\", () => {\r\n        // calendar loaded\r\n      });\r\n      gapi.auth2\r\n        .getAuthInstance()\r\n        .signIn()\r\n        .then(() => {\r\n          var event = {\r\n            summary: title,\r\n            location: place,\r\n            description: description,\r\n            start: {\r\n              dateTime: new Date(timeline?.toDate()).toISOString().slice(0, -5),\r\n              timeZone: \"Asia/Kolkata\",\r\n            },\r\n            end: {\r\n              dateTime: \"2021-05-28T17:00:00\",\r\n              timeZone: \"Asia/Kolkata\",\r\n            },\r\n            // attendees: [{ email: \"lpage@example.com\" }],\r\n            reminders: {\r\n              useDefault: false,\r\n              overrides: [\r\n                { method: \"email\", minutes: 24 * 60 },\r\n                { method: \"popup\", minutes: 10 },\r\n              ],\r\n            },\r\n          };\r\n\r\n          var request = gapi.client.calendar.events.insert({\r\n            calendarId: \"primary\",\r\n            resource: event,\r\n          });\r\n\r\n          request.execute((event) => {\r\n            window.open(event.htmlLink);\r\n          });\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    var x = new Date(timeline?.toDate());\r\n    var y = new Date();\r\n    if (x < y && societyId.societyId !== null) {\r\n      db.collection(\"societies\")\r\n        .doc(societyId.societyId)\r\n        .collection(\"events\")\r\n        .doc(id)\r\n        .delete()\r\n        .then(() => {\r\n          // Event successfully deleted!\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"card container\"\r\n      style={{ borderWidth: \"medium\", borderColor: \"yellowgreen\" }}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-3 p-0\">\r\n          <img\r\n            className=\"card-img img-fluid\"\r\n            src={url}\r\n            alt={title}\r\n            style={{\r\n              minWidth: \"100%\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-8 p-0\">\r\n          <div className=\"card-body\" style={{ padding: \"4px 0px 4px 4px\" }}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              color=\"secondary\"\r\n              className=\"card-text pr-4\"\r\n            >\r\n              {new Date(timeline?.toDate()).toUTCString()}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" className=\"card-text\">\r\n              {place}\r\n            </Typography>\r\n            <Typography paragraph className=\"card-text mb-0\">\r\n              {description}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-1\" style={{ padding: \"0px\" }}>\r\n          <IconButton\r\n            style={{ padding: \"0px\", color: \"blue\" }}\r\n            onClick={() => {\r\n              handleClick({ url, title, timeline, place, description });\r\n            }}\r\n          >\r\n            <TodayIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebarOption.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\googleCalendar.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":35,"column":10,"nodeType":"162","messageId":"163","endLine":35,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":54,"column":6,"nodeType":"166","endLine":54,"endColumn":8,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"168","line":38,"column":27,"nodeType":"162","messageId":"163","endLine":38,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":103,"column":6,"nodeType":"166","endLine":103,"endColumn":17,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"170","line":163,"column":17,"nodeType":"166","endLine":163,"endColumn":19},{"ruleId":"164","severity":1,"message":"170","line":73,"column":17,"nodeType":"166","endLine":73,"endColumn":19},{"ruleId":"160","severity":1,"message":"171","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":21},{"ruleId":"164","severity":1,"message":"172","line":77,"column":6,"nodeType":"166","endLine":77,"endColumn":8,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["176"],"'entry' is assigned a value but never used.",["177"],"Assignments to the 'likes' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'EventBusyIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'societyId.societyId', and 'timeline'. Either include them or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, societyId]",{"range":"187","text":"188"},"Update the dependencies array to be: [id, societyId.societyId, timeline]",{"range":"189","text":"190"},[1452,1454],"[dispatch]",[2927,2938],"[dispatch, societyId]",[2375,2377],"[id, societyId.societyId, timeline]"]