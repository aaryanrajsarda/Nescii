[{"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\index.js":"1","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\App.js":"3","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Home.js":"4","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Society.js":"5","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Header.js":"6","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Feed.js":"7","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Sidebar.js":"8","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Notices.js":"9","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebar.js":"10","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyChat.js":"11","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Post.js":"12","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\MessageSender.js":"13","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Widgets.js":"14","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyPost.js":"15","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\firebase.js":"16","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebarOption.js":"17","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyMessageSender.js":"18","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\WidgetAbout.js":"19","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Events.js":"20","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Event.js":"21","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\configureStore.js":"22","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Loading.js":"23","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionCreators.js":"24","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyDefault.js":"25","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\notices.js":"26","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionTypes.js":"27","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reducer.js":"28","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Login.js":"29","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\StateProvider.js":"30"},{"size":682,"mtime":1611820792214,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1609075119802,"results":"33","hashOfConfig":"32"},{"size":1131,"mtime":1611909741793,"results":"34","hashOfConfig":"32"},{"size":605,"mtime":1611915134347,"results":"35","hashOfConfig":"32"},{"size":757,"mtime":1611771736301,"results":"36","hashOfConfig":"32"},{"size":3460,"mtime":1611913805336,"results":"37","hashOfConfig":"32"},{"size":1375,"mtime":1611909863043,"results":"38","hashOfConfig":"32"},{"size":1320,"mtime":1611909000422,"results":"39","hashOfConfig":"32"},{"size":2928,"mtime":1611914857135,"results":"40","hashOfConfig":"32"},{"size":10568,"mtime":1611771736308,"results":"41","hashOfConfig":"32"},{"size":2747,"mtime":1611744889877,"results":"42","hashOfConfig":"32"},{"size":867,"mtime":1611683418695,"results":"43","hashOfConfig":"32"},{"size":8467,"mtime":1611916477990,"results":"44","hashOfConfig":"32"},{"size":331,"mtime":1611739088632,"results":"45","hashOfConfig":"32"},{"size":903,"mtime":1611169745616,"results":"46","hashOfConfig":"32"},{"size":841,"mtime":1611854358237,"results":"47","hashOfConfig":"32"},{"size":519,"mtime":1611683418714,"results":"48","hashOfConfig":"32"},{"size":15779,"mtime":1611840557719,"results":"49","hashOfConfig":"32"},{"size":336,"mtime":1611226732720,"results":"50","hashOfConfig":"32"},{"size":2127,"mtime":1611766862635,"results":"51","hashOfConfig":"32"},{"size":475,"mtime":1611744912043,"results":"52","hashOfConfig":"32"},{"size":373,"mtime":1611771736313,"results":"53","hashOfConfig":"32"},{"size":219,"mtime":1611771736298,"results":"54","hashOfConfig":"32"},{"size":1352,"mtime":1611771736310,"results":"55","hashOfConfig":"32"},{"size":6111,"mtime":1611771736303,"results":"56","hashOfConfig":"32"},{"size":691,"mtime":1611771736314,"results":"57","hashOfConfig":"32"},{"size":145,"mtime":1611820284798,"results":"58","hashOfConfig":"32"},{"size":343,"mtime":1611820379859,"results":"59","hashOfConfig":"32"},{"size":5562,"mtime":1611903172760,"results":"60","hashOfConfig":"32"},{"size":433,"mtime":1611820788287,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"19nyqpk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\index.js",[],["125","126"],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\App.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Home.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Society.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Header.js",["127","128","129","130"],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Feed.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Sidebar.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Notices.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebar.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyChat.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Post.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\MessageSender.js",["131"],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Widgets.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyPost.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\firebase.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietySidebarOption.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyMessageSender.js",["132"],"import React, { useState } from \"react\";\r\nimport \"./SocietyMessageSender.css\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\n// import DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {storage, db} from './firebase';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CancelRounded\";\r\nimport {useStateValue} from './StateProvider';\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 - rand();\r\n  const left = 50 - rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\n\r\nfunction SocietyMessageSender() {\r\n  const classes = useStyles();\r\n  const [{user}] = useStateValue();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n  const [photo, setPhoto] = useState(null);\r\n  const [video, setVideo] = useState(null);\r\n  const [eventModal, setEventModal] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n  const [start, setStart] = useState(new Date());\r\n  const [place, setPlace] = useState(\"\");\r\n  const [eventTitle, setEventTitle] = useState(\"\");\r\n  const [eventDescription, setEventDescription] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [eventPhoto,setEventPhoto]= useState(null);\r\n  const { societyId } = useParams();\r\n  const handleEventModalOpen = () => {\r\n    setEventModal(true);\r\n  };\r\n\r\n  const handleEventModalClose = () => {\r\n    setEventModal(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePhotoOpen = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPhoto(e.target.result);\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleVideoOpen = (evt) => {\r\n    var reader = new window.FileReader(),\r\n      file = evt.target.files[0],\r\n      url;\r\n\r\n    reader = window.URL || window.webKitURL;\r\n\r\n    if (reader && reader.createObjectURL) {\r\n      url = reader.createObjectURL(file);\r\n      video.src = url;\r\n      reader.revokeObjectURL(url); //free up memory\r\n      return;\r\n    }\r\n\r\n    if (!window.FileReader) {\r\n      console.log(\"Sorry, not so much\");\r\n      return;\r\n    }\r\n\r\n    reader = new window.FileReader();\r\n    reader.onload = function (evt) {\r\n      video.src = evt.target.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  const handleStartChange = (date) => {\r\n    setStart(date);\r\n  };\r\n  \r\n\r\n  // const handleEndChange = (date) => {\r\n  //   setEnd(date);\r\n  // };\r\n\r\n  const RemoveSelectedFile = () => {\r\n    const x = document.getElementById(\"postImage\");\r\n    x.value = \"\";\r\n    \r\n  };\r\n\r\n  const handlePhotoClose = () => {\r\n    setPhoto(null);\r\n    RemoveSelectedFile();\r\n  };\r\n\r\n  const handleEventImage = (e) => {\r\n      if(e.target.files[0]){\r\n        setEventPhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  // const handleVideoOpen = (event) => {\r\n\r\n  // var source = document.getElementById('video_here');\r\n  // source[0].src = URL.createObjectURL(event.files[0]);\r\n  // source.parent()[0].load();\r\n  // };\r\n\r\n  \r\nconst handleEventSubmit = (e) => {\r\n  e.preventDefault();\r\n  if(token==='nescii@102' || token==='nescii@101'){\r\n    console.log(societyId);\r\n    if(societyId){\r\n      const uploadTask = storage.ref(`images/${eventPhoto.name}`).put(eventPhoto);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n            // progress function\r\n            \r\n            \r\n        },\r\n        (error)=> {\r\n            // error function...\r\n            console.log(error);\r\n            alert(error.message);\r\n        },\r\n        () => {\r\n            // complete function\r\n            storage\r\n                   .ref('images')\r\n                   .child(eventPhoto.name)\r\n                   .getDownloadURL()\r\n                   .then(url => {\r\n                       //post image inside db\r\n                       db.collection('societies').doc(societyId)\r\n                          .collection('events').add({\r\n                                description:eventDescription,\r\n                                timestamp:date,\r\n                                place:place,\r\n                                title:eventTitle,\r\n                                url:url,\r\n                            }\r\n                        )\r\n                        .then(function() {\r\n                          console.log(\"Document successfully updated!\");\r\n                          })\r\n                          .catch(function(error) {\r\n                              // The document probably doesn't exist.\r\n                              console.error(\"Error updating document: \", error);\r\n                          });\r\n                   })\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n  handleEventModalClose();\r\n\r\n};\r\n\r\n\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div className=\"modal__top\">\r\n        <h2 id=\"simple-modal-title\">Create Post</h2>\r\n        <Button onClick={handleClose}>\r\n          <CloseRoundedIcon />\r\n        </Button>\r\n      </div>\r\n      <hr />\r\n      <div className=\"modal__profile\">\r\n        <Avatar src={user?.photoURL} alt={user?.displayName}  />\r\n        <h4 className=\"modal__title\">{user?.displayName}</h4>\r\n      </div>\r\n      <div\r\n        style={{\r\n          maxWidth: \"100%\",\r\n          overflowX: \"hidden\",\r\n          overflowY: \"auto\",\r\n          maxHeight: \"300px\",\r\n        }}\r\n      >\r\n        <textarea\r\n          className=\"modal__input\"\r\n          rows=\"5\"\r\n          cols=\"20\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Whats on your mind?\"\r\n        />\r\n        <div className=\"modal__input__photo\">\r\n          <Button\r\n            style={{ position: \"absolute\", color: \"white\" }}\r\n            className=\"modal__input__photo__button\"\r\n            onClick={handlePhotoClose}\r\n          >\r\n            <CloseRoundedIcon />\r\n          </Button>\r\n          <img src={photo} alt=\"\" />\r\n          {video != null ? (\r\n            <video width=\"400\" controls>\r\n              <source src={URL.createObjectURL(video)} />\r\n            </video>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"messageSender__bottom\">\r\n        <div className=\"messageSender__option\">\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"postImage\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={handlePhotoOpen}\r\n          />\r\n          <label htmlFor=\"postImage\" style={{ display: \"inline-flex\" }}>\r\n            <IconButton color=\"primary\" component=\"div\">\r\n              <InsertPhotoIcon style={{ color: \"green\" }} />\r\n            </IconButton>\r\n            <h3 style={{ margin: \"11px\" }}>Photo</h3>\r\n          </label>\r\n        </div>\r\n        <div className=\"messageSender__option\">\r\n          {/* \r\n\r\n          {/* <PlayCircleFilledIcon style={{ color: \"red\" }} />\r\n          <h3>Video</h3> */}\r\n          {/* <input accept=\"video/*\" type=\"file\" alt=\"/\"  className=\"video__input\"/>\r\n           */}\r\n\r\n          <input\r\n            accept=\"video/*\"\r\n            className={classes.input}\r\n            id=\"postVideo\"\r\n            multiple\r\n            type=\"file\"\r\n            name=\"file[]\"\r\n            onChange={handleVideoOpen}\r\n          />\r\n          <label htmlFor=\"postVideo\" style={{ display: \"inline-flex\" }}>\r\n            <IconButton color=\"primary\" component=\"div\">\r\n              <PlayCircleFilledIcon style={{ color: \"red\" }} />\r\n            </IconButton>\r\n            <h3 style={{ margin: \"11px\" }}>Video</h3>\r\n          </label>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n      <Button\r\n        className=\"post__button\"\r\n        style={{ color: \"white\", backgroundColor: \"#16a596\" }}\r\n      >\r\n        Post\r\n      </Button>\r\n      {/* <SimpleModal /> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={eventModal}\r\n        onClose={handleEventModalClose}\r\n        style={{\r\n          display: \"grid\",\r\n          placeItems: \"center\",\r\n          overflowY: \"scroll\",\r\n          marginTop: \"3rem\",\r\n          marginBottom: \"3rem\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"2rem\",\r\n          }}\r\n        >\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={handleEventSubmit}\r\n          >\r\n            <div>\r\n              <h1>\r\n                <center>Event</center>\r\n              </h1>\r\n              <TextField\r\n                color=\"secondary\"\r\n                fullWidth\r\n                id=\"eventTitle\"\r\n                label=\"Event Title\"\r\n                required\r\n                value={eventTitle}\r\n                onChange={(e) => {\r\n                  setEventTitle(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                color=\"secondary\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                multiline\r\n                id=\"eventDescription\"\r\n                label=\"Event Description\"\r\n                required\r\n                value={eventDescription}\r\n                onChange={(e) => {\r\n                  setEventDescription(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                color=\"secondary\"\r\n                fullWidth\r\n                id=\"eventTitle\"\r\n                label=\"Event Place\"\r\n                required\r\n                value={place}\r\n                onChange={(e) => {\r\n                  setPlace(e.target.value);\r\n                }}\r\n              />\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Date\"\r\n                  value={date}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n                <br />\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  id=\"time-picker\"\r\n                  label=\"Start\"\r\n                  value={start}\r\n                  onChange={handleStartChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change time\",\r\n                  }}\r\n                />\r\n                <br />\r\n                {/* <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  id=\"time-picker\"\r\n                  label=\"End\"\r\n                  // value={end}\r\n                  onChange={handleEndChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change time\",\r\n                  }}\r\n                /> */}\r\n              </MuiPickersUtilsProvider>\r\n              <TextField\r\n                color=\"secondary\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"token\"\r\n                label=\"Token\"\r\n                required\r\n                value={token}\r\n                onChange={(e) => {\r\n                  setToken(e.target.value);\r\n                }}\r\n              />\r\n              <label htmlFor=\"EventImage\">              \r\n              <h5 style={{color:\"gray\", fontWeight:\"500\"}}>Event Image</h5>\r\n            </label>\r\n              <input\r\n              accept=\"image/*\"\r\n              id=\"EventImage\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleEventImage}\r\n            />\r\n                <center>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ marginTop: \"2rem\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </center>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"message\">\r\n        <div className=\"messageSender__top\">\r\n          <Avatar src={user?.photoURL} alt={user?.displayName} />\r\n          <button type=\"button\" onClick={handleOpen}>\r\n            What's on Your Mind?\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n        <div className=\"messageSender__bottom\">\r\n          <div className=\"messageSender__option\">\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"postImage\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handlePhotoOpen}\r\n            />\r\n            <label htmlFor=\"postImage\" style={{ display: \"inline-flex\" }}>\r\n              <IconButton color=\"primary\" component=\"div\">\r\n                <InsertPhotoIcon style={{ color: \"green\" }} />\r\n              </IconButton>\r\n              <h3 style={{ margin: \"11px\" }}>Photo</h3>\r\n            </label>\r\n          </div>\r\n          <div className=\"messageSender__option\">\r\n            {/* \r\n\r\n          {/* <PlayCircleFilledIcon style={{ color: \"red\" }} />\r\n          <h3>Video</h3> */}\r\n            {/* <input accept=\"video/*\" type=\"file\" alt=\"/\"  className=\"video__input\"/>\r\n             */}\r\n\r\n            <input\r\n              accept=\"video/*\"\r\n              className={classes.input}\r\n              id=\"postVideo\"\r\n              multiple\r\n              type=\"file\"\r\n              name=\"file[]\"\r\n              onChange={handlePhotoOpen}\r\n            />\r\n            <label htmlFor=\"postVideo\" style={{ display: \"inline-flex\" }}>\r\n              <IconButton color=\"primary\" component=\"div\">\r\n                <PlayCircleFilledIcon style={{ color: \"red\" }} />\r\n              </IconButton>\r\n              <h3 style={{ margin: \"11px\" }}>Video</h3>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"messageSender__option\">\r\n            <input accept=\"\" className={classes.input} id=\"postEvent\" />\r\n            <label htmlFor=\"postEvent\" style={{ display: \"inline-flex\" }}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                component=\"div\"\r\n                onClick={handleEventModalOpen}\r\n              >\r\n                <EventIcon style={{ color: \"gray\" }} />\r\n              </IconButton>\r\n              <h3 style={{ margin: \"11px\" }}>Event</h3>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SocietyMessageSender;\r\n","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\WidgetAbout.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Events.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Event.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\configureStore.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Loading.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionCreators.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\SocietyDefault.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\notices.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\redux\\ActionTypes.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\reducer.js",[],"C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\Login.js",["133"],"import React,{useState,useEffect} from 'react';\r\nimport './Login.css';\r\nimport { auth, provider} from './firebase';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50 ;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nfunction Login() {\r\n  const [state,dispatch] = useStateValue();\r\n  const classes =useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] =useState(false);\r\n  const [username, setUsername] =useState('');\r\n  const [password, setPassword] =useState('');\r\n  const [email, setEmail] =useState('');\r\n  const [user,setUser] =useState(null);\r\n  const [openSignIn, setOpenSignIn] =useState(false);\r\n\r\n  useEffect ( ()=> {\r\n    auth.onAuthStateChanged((authUser)=> {\r\n      if(authUser) {\r\n        //user has logged in..\r\n        console.log(authUser.uid);\r\n        setUser(authUser); // helps in persistence\r\n        \r\n      }else{\r\n        //user has logged out..\r\n        setUser(null);\r\n      }\r\n      dispatch({\r\n        type:actionTypes.SET_USER,\r\n        user:user\r\n    })\r\n    })\r\n  }, [dispatch, user, username]);\r\n\r\n\r\n    const signInWithGoogle= ()=>{\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then(result => {\r\n                console.log(result);\r\n                dispatch({\r\n                    type:actionTypes.SET_USER,\r\n                    user:result.user\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message))\r\n    }\r\n\r\n    const signUp = (event) =>{\r\n        event.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n            .then((authUser)=> {\r\n                return authUser.user.updateProfile({\r\n                displayName: username,\r\n              })\r\n            })\r\n            .catch((error)=> alert(error.message))\r\n        setOpen(false);\r\n      }\r\n    \r\n      const signIn = (event) =>{\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email,password)\r\n            .then(result => {\r\n                console.log(result);\r\n                dispatch({\r\n                    type:actionTypes.SET_USER,\r\n                    user:result.user\r\n                })\r\n            })\r\n            .catch((error)=> alert(error.message))\r\n        setOpenSignIn(false);\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                {/* <img src=\"https://yt3.ggpht.com/a-/AAuE7mDBBS00E88tbJONrBTNiWDBhHSfBKSM3889QA=s900-mo-c-c0xffffffff-rj-k-no\" alt=\"/\" /> */}\r\n                <Modal open={open} onClose={() => setOpen(false)} >\r\n          <div style={modalStyle} className={classes.paper}>\r\n            <form className=\"app__signup\">\r\n            <center>\r\n                {/* <img className=\"app__headerImage\"\r\n                 src='https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1280px-Instagram_logo.svg.png' alt='' /> */}\r\n            </center>\r\n                <Input placeholder='username' type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} />\r\n                <Input placeholder='email' type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n                <Input placeholder='password' type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} />\r\n                <Button type=\"submit\" onClick={signUp}>Sign Up</Button>\r\n            </form>\r\n            \r\n\r\n          </div>\r\n        </Modal>\r\n        <Modal open={openSignIn} onClose={() => setOpenSignIn(false)} >\r\n          <div style={modalStyle} className={classes.paper}>\r\n            <form className=\"app__signup\">\r\n            <center>\r\n                {/* <img className=\"app__headerImage\"\r\n                 src='https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1280px-Instagram_logo.svg.png' alt='' /> */}\r\n            </center>\r\n                <Input placeholder='email' type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n                <Input placeholder='password' type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} />\r\n                <Button type=\"submit\" onClick={signIn}>Sign In</Button>\r\n            </form>\r\n            \r\n\r\n          </div>\r\n        </Modal>\r\n                <h1>Nescii</h1>\r\n                <h1>Sign in to Nescii</h1>\r\n                <Button onClick={signInWithGoogle}>Sign In With Google</Button>\r\n                {user ? \r\n                  (<Button  onClick={()=> auth.signOut()}>Logout</Button>\r\n                  ):(\r\n                    <div className='app__loginContainer'>\r\n                  <Button  onClick={()=> setOpenSignIn(true)}>Sign In</Button>\r\n                  <Button  onClick={()=> setOpen(true)}>SignUp Dude....</Button>\r\n                  </div>\r\n                  )\r\n                  }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n        \r\n\r\n        ","C:\\Users\\hp\\Documents\\react-projects\\nescii\\src\\StateProvider.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"142","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":17},{"ruleId":"138","severity":1,"message":"143","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":31},{"ruleId":"138","severity":1,"message":"144","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":22},{"ruleId":"138","severity":1,"message":"145","line":47,"column":17,"nodeType":"140","messageId":"141","endLine":47,"endColumn":25},{"ruleId":"138","severity":1,"message":"145","line":63,"column":17,"nodeType":"140","messageId":"141","endLine":63,"endColumn":25},{"ruleId":"138","severity":1,"message":"146","line":36,"column":10,"nodeType":"140","messageId":"141","endLine":36,"endColumn":15},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'AddIcon' is defined but never used.","Identifier","unusedVar","'ForumIcon' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'setVideo' is assigned a value but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]